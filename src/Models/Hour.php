<?php
/*
 * WeatherAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

namespace WeatherAPILib\Models;

use JsonSerializable;

/**
 * @todo Write general description for this model
 */
class Hour implements JsonSerializable
{
    /**
     * Time as epoch
     * @maps time_epoch
     * @var integer|null $timeEpoch public property
     */
    public $timeEpoch;

    /**
     * Date and time
     * @var string|null $time public property
     */
    public $time;

    /**
     * Temperature in celsius
     * @maps temp_c
     * @var double|null $tempC public property
     */
    public $tempC;

    /**
     * Temperature in fahrenheit
     * @maps temp_f
     * @var double|null $tempF public property
     */
    public $tempF;

    /**
     * 1 = Yes 0 = No <br />Whether to show day condition icon or night icon
     * @maps is_day
     * @var integer|null $isDay public property
     */
    public $isDay;

    /**
     * @todo Write general description for this property
     * @var \WeatherAPILib\Models\Condition|null $condition public property
     */
    public $condition;

    /**
     * Wind speed in miles per hour
     * @maps wind_mph
     * @var double|null $windMph public property
     */
    public $windMph;

    /**
     * Wind speed in kilometer per hour
     * @maps wind_kph
     * @var double|null $windKph public property
     */
    public $windKph;

    /**
     * Wind direction in degrees
     * @maps wind_degree
     * @var integer|null $windDegree public property
     */
    public $windDegree;

    /**
     * Wind direction as 16 point compass. e.g.: NSW
     * @maps wind_dir
     * @var string|null $windDir public property
     */
    public $windDir;

    /**
     * Pressure in millibars
     * @maps pressure_mb
     * @var double|null $pressureMb public property
     */
    public $pressureMb;

    /**
     * Pressure in inches
     * @maps pressure_in
     * @var double|null $pressureIn public property
     */
    public $pressureIn;

    /**
     * Precipitation amount in millimeters
     * @maps precip_mm
     * @var double|null $precipMm public property
     */
    public $precipMm;

    /**
     * Precipitation amount in inches
     * @maps precip_in
     * @var double|null $precipIn public property
     */
    public $precipIn;

    /**
     * Humidity as percentage
     * @var integer|null $humidity public property
     */
    public $humidity;

    /**
     * Cloud cover as percentage
     * @var integer|null $cloud public property
     */
    public $cloud;

    /**
     * Feels like temperature as celcius
     * @maps feelslike_c
     * @var double|null $feelslikeC public property
     */
    public $feelslikeC;

    /**
     * Feels like temperature as fahrenheit
     * @maps feelslike_f
     * @var double|null $feelslikeF public property
     */
    public $feelslikeF;

    /**
     * @todo Write general description for this property
     * @maps vis_km
     * @var double|null $visKm public property
     */
    public $visKm;

    /**
     * @todo Write general description for this property
     * @maps vis_miles
     * @var double|null $visMiles public property
     */
    public $visMiles;

    /**
     * UV Index
     * @var double|null $uv public property
     */
    public $uv;

    /**
     * Wind gust in miles per hour
     * @maps gust_mph
     * @var double|null $gustMph public property
     */
    public $gustMph;

    /**
     * Wind gust in kilometer per hour
     * @maps gust_kph
     * @var double|null $gustKph public property
     */
    public $gustKph;

    /**
     * Constructor to set initial or default values of member properties
     * @param integer   $timeEpoch  Initialization value for $this->timeEpoch
     * @param string    $time       Initialization value for $this->time
     * @param double    $tempC      Initialization value for $this->tempC
     * @param double    $tempF      Initialization value for $this->tempF
     * @param integer   $isDay      Initialization value for $this->isDay
     * @param Condition $condition  Initialization value for $this->condition
     * @param double    $windMph    Initialization value for $this->windMph
     * @param double    $windKph    Initialization value for $this->windKph
     * @param integer   $windDegree Initialization value for $this->windDegree
     * @param string    $windDir    Initialization value for $this->windDir
     * @param double    $pressureMb Initialization value for $this->pressureMb
     * @param double    $pressureIn Initialization value for $this->pressureIn
     * @param double    $precipMm   Initialization value for $this->precipMm
     * @param double    $precipIn   Initialization value for $this->precipIn
     * @param integer   $humidity   Initialization value for $this->humidity
     * @param integer   $cloud      Initialization value for $this->cloud
     * @param double    $feelslikeC Initialization value for $this->feelslikeC
     * @param double    $feelslikeF Initialization value for $this->feelslikeF
     * @param double    $visKm      Initialization value for $this->visKm
     * @param double    $visMiles   Initialization value for $this->visMiles
     * @param double    $uv         Initialization value for $this->uv
     * @param double    $gustMph    Initialization value for $this->gustMph
     * @param double    $gustKph    Initialization value for $this->gustKph
     */
    public function __construct()
    {
        if (23 == func_num_args()) {
            $this->timeEpoch  = func_get_arg(0);
            $this->time       = func_get_arg(1);
            $this->tempC      = func_get_arg(2);
            $this->tempF      = func_get_arg(3);
            $this->isDay      = func_get_arg(4);
            $this->condition  = func_get_arg(5);
            $this->windMph    = func_get_arg(6);
            $this->windKph    = func_get_arg(7);
            $this->windDegree = func_get_arg(8);
            $this->windDir    = func_get_arg(9);
            $this->pressureMb = func_get_arg(10);
            $this->pressureIn = func_get_arg(11);
            $this->precipMm   = func_get_arg(12);
            $this->precipIn   = func_get_arg(13);
            $this->humidity   = func_get_arg(14);
            $this->cloud      = func_get_arg(15);
            $this->feelslikeC = func_get_arg(16);
            $this->feelslikeF = func_get_arg(17);
            $this->visKm      = func_get_arg(18);
            $this->visMiles   = func_get_arg(19);
            $this->uv         = func_get_arg(20);
            $this->gustMph    = func_get_arg(21);
            $this->gustKph    = func_get_arg(22);
        }
    }


    /**
     * Encode this object to JSON
     */
    public function jsonSerialize()
    {
        $json = array();
        $json['time_epoch']  = $this->timeEpoch;
        $json['time']        = $this->time;
        $json['temp_c']      = $this->tempC;
        $json['temp_f']      = $this->tempF;
        $json['is_day']      = $this->isDay;
        $json['condition']   = $this->condition;
        $json['wind_mph']    = $this->windMph;
        $json['wind_kph']    = $this->windKph;
        $json['wind_degree'] = $this->windDegree;
        $json['wind_dir']    = $this->windDir;
        $json['pressure_mb'] = $this->pressureMb;
        $json['pressure_in'] = $this->pressureIn;
        $json['precip_mm']   = $this->precipMm;
        $json['precip_in']   = $this->precipIn;
        $json['humidity']    = $this->humidity;
        $json['cloud']       = $this->cloud;
        $json['feelslike_c'] = $this->feelslikeC;
        $json['feelslike_f'] = $this->feelslikeF;
        $json['vis_km']      = $this->visKm;
        $json['vis_miles']   = $this->visMiles;
        $json['uv']          = $this->uv;
        $json['gust_mph']    = $this->gustMph;
        $json['gust_kph']    = $this->gustKph;

        return $json;
    }
}
